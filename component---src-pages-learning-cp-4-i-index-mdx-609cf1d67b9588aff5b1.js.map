{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/learning/cp4i/index.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","Tabs","Tab","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-learning-cp-4-i-index-mdx-609cf1d67b9588aff5b1.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Learning tasks for developers to understand the IBM middleware integration use cases on Red Hat OpenShift.`}</p>\n    </PageDescription>\n    <h3>{`Learning Tasks`}</h3>\n    <p>{`This set of learning tasks focuses on using IBM middleware on Red Hat OpenShift.`}</p>\n    <h2>{`Self-paced agenda to build and deploy an App Connect REST API workflow`}</h2>\n    <p>{`This activity provides a working example of a Tekton based CICD pipeline to build and deploy an App Connect application invoking the REST API of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-garage-cloud/inventory-management-svc-solution\"\n      }}>{`Inventory Management Service`}</a>{`.\nThe Pipeline and Task resources available in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloudnativetoolkit.dev/\"\n      }}>{`Cloud Native Toolkit`}</a>{` can be used as a starting point to build BAR files for other ACE workflows.`}</p>\n    <p>{`The activity consists of the following tasks:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Prerequisites`}</li>\n      <li parentName=\"ol\">{`Deploy the backend `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-garage-cloud/inventory-management-svc-solution\"\n        }}>{`Inventory Management Service`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Configure the App Connect workflow with the Inventory REST API URL.`}</li>\n      <li parentName=\"ol\">{`Execute the the App Connect pipeline to build and deploy the configured workflow.`}</li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Prerequisites`}</strong></h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Task`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Instructions`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Set up accounts and tools`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"/getting-started/prereqs\"\n            }}>{`Instructions`}</a></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Install the Cloud Native Toolkit`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://cloudnativetoolkit.dev/getting-started-day-0/install-toolkit/iteration-zero\"\n            }}>{`Install the Cloud Native Toolkit`}</a>{`  & the following modules`}<br />{`- `}<a parentName=\"td\" {...{\n              \"href\": \"https://github.com/ibm-garage-cloud/terraform-ibm-cp-catalog\"\n            }}>{`Cloud Pak Catalog`}</a><br />{`- `}<a parentName=\"td\" {...{\n              \"href\": \"https://github.com/ibm-garage-cloud/terraform-ibm-cp-platform-navigator\"\n            }}>{`IBM Cloud Pak for Integration Platform Navigator`}</a><br />{`- `}<a parentName=\"td\" {...{\n              \"href\": \"https://github.com/ibm-garage-cloud/terraform-ibm-cp-app-connect\"\n            }}>{`IBM App Connect`}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3><strong parentName=\"h3\">{`Deploy the backend Inventory Management Service`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open a terminal and log into your OpenShift cluster.  For IBM Cloud, navigate to your cluster in the `}<em parentName=\"p\">{`IBM Cloud console`}</em>{`, click on the `}<strong parentName=\"p\">{`Access`}</strong>{` tab, and follow the\ninstructions to log in to the cluster from the command line.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a development namespace.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc sync \\${DEV_NAMESPACE} --dev\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open the Developer Dashboard.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc dashboard\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From the Developer Dashboard, click on `}<strong parentName=\"p\"><Globals name=\"templates\" mdxType=\"Globals\" /></strong>{` tab.  Click on the `}<strong parentName=\"p\">{`Inventory Service`}</strong>{` tile to create your app github repository from the\ntemplate repository selected. You can also click on the `}<strong parentName=\"p\">{`Git Icon`}</strong>{` to browse the source template repository and click on the `}<strong parentName=\"p\">{`Template`}</strong>{` to create the template.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Complete the `}<a parentName=\"p\" {...{\n            \"href\": \"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-from-a-template\"\n          }}>{`GitHub create repository from template`}</a>{` process.`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Owner`}</strong>{`: Select a validate GitHub organization that you are authorized to create repositories within or the one you were given for the shared cluster (See warning above)`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Repository name`}</strong>{`: Enter a valid name for you repo, GitHub will help with showing a green tick if it is valid (See warning above)`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Description`}</strong>{`: Describe your app`}</p>\n        <p parentName=\"li\">{`Press `}<strong parentName=\"p\">{`Create repository from template`}</strong>{` and the new repository will be created in your selected organization.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`With the browser open to the newly created repository, click on `}<strong parentName=\"p\">{`Clone or download`}</strong>{` and copy the clone `}<em parentName=\"p\">{`SSH link`}</em>{`, and use the `}<inlineCode parentName=\"p\">{`git clone`}</inlineCode>{` command to clone it to your developer desktop machine.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git clone git@github.com:{gitid}/inventory-management-svc-solution.git\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change into the cloned directory.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`cd inventory-management-svc-solution\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set a basepath for the REST API for the Inventory Management Service.`}</p>\n        <Tabs mdxType=\"Tabs\">\n          <Tab label=\"OpenShift 4.0 - 4.5\" mdxType=\"Tab\">\n            <br />\n            <ol parentName=\"li\">\n              <li parentName=\"ol\">\n                <p parentName=\"li\">{`Edit `}<strong parentName=\"p\">{`src/main/resources/application.yml`}</strong>{` and update the `}<em parentName=\"p\">{`server`}</em>{` section to include the `}<inlineCode parentName=\"p\">{`/api`}</inlineCode>{` base path to `}<em parentName=\"p\">{`server.servlet.context-path`}</em>{`.`}</p>\n                <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-shell\",\n                    \"metastring\": \"script\",\n                    \"script\": true\n                  }}>{`server:\n  port: \\${PORT:9080}\n  servlet:\n    context-path: \"/api\"\n`}</code></pre>\n              </li>\n            </ol>\n            <br />\n            <ol parentName=\"li\" {...{\n              \"start\": 2\n            }}>\n              <li parentName=\"ol\">\n                <p parentName=\"li\">{`Edit the file `}<strong parentName=\"p\">{`chart/base/values.yaml`}</strong>{` and set the `}<em parentName=\"p\">{`route.path`}</em>{` from `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`/api`}</inlineCode>{`.`}</p>\n                <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-shell\",\n                    \"metastring\": \"script\",\n                    \"script\": true\n                  }}>{`route:\n  enabled: false\n  rewriteTarget: \"/\"\n  path: \"/api\"\n`}</code></pre>\n              </li>\n            </ol>\n          </Tab>\n          <Tab label=\"OpenShift 4.6+\" mdxType=\"Tab\">\n            <br />\n            <ol parentName=\"li\">\n              <li parentName=\"ol\">\n                <p parentName=\"li\">{`Edit the file `}<strong parentName=\"p\">{`chart/base/values.yaml`}</strong>{` and set the `}<em parentName=\"p\">{`route.path`}</em>{` from `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`/api`}</inlineCode>{`.`}</p>\n                <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                    \"className\": \"language-shell\",\n                    \"metastring\": \"script\",\n                    \"script\": true\n                  }}>{`route:\n  enabled: false\n  rewriteTarget: \"/\"\n  path: \"/api\"\n`}</code></pre>\n              </li>\n            </ol>\n          </Tab>\n        </Tabs>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set the namespace context.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc project {DEV_NAMESPACE}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Register the App in a DevOps Pipeline`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`  oc pipeline\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select the `}<strong parentName=\"p\">{`Tekton`}</strong>{` pipeline type.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The first time a pipeline is registered in the namespace, the CLI will ask for your username and\n`}<strong parentName=\"p\">{`Personal Access Token`}</strong>{` for the Git repository.  The credentials will be stored in a secret named `}<inlineCode parentName=\"p\">{`git-credentials`}</inlineCode>{`. It will use the current branch.`}</p>\n        <p parentName=\"li\">{`  `}<strong parentName=\"p\">{`Username`}</strong>{`: Enter your GitHub user id`}</p>\n        <p parentName=\"li\">{`  `}<strong parentName=\"p\">{`Personal Access Token`}</strong>{`: Paste your GitHub personal access token`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When registering a `}<inlineCode parentName=\"p\">{`Tekton`}</inlineCode>{` pipeline, you will also be prompted to select which pipeline you want to use for your application. Select `}<inlineCode parentName=\"p\">{`ibm-java-gradle`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select `}<em parentName=\"p\">{`Y`}</em>{`/`}<em parentName=\"p\">{`n`}</em>{` to enable the pipeline to scan the image for vulnerabilities.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Provide `}<em parentName=\"p\">{`/api`}</em>{` as the base path.  This is needed by the pipeline when running the `}<em parentName=\"p\">{`health`}</em>{` Task.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After the pipeline has been created, the command will set up a webhook from the Git host to the pipeline event listener.`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Note:`}</strong>{` If the webhook registration step fails it is likely because the Git credentials are incorrect or do not have enough permission in the repository.`}</p>\n        <p parentName=\"li\">{`The pipeline will be registered in your development cluster and a pipelinerun will be started.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`View your application pipeline.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc console\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From menu on the left switch to the `}<strong parentName=\"p\">{`Developer`}</strong>{` mode and select the `}<em parentName=\"p\">{`dev`}</em>{` project that was used for the application pipeline registration.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the left menu, select `}<em parentName=\"p\">{`Pipelines`}</em>{` and click on the link to the `}<inlineCode parentName=\"p\">{`inventory-management-svc-solution-xxxxxx`}</inlineCode>{` PipelineRun (PLR).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Validate the REST API of the Inventory Management service is working correctly in the terminal.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`curl https://$(oc get route inventory-management-svc-solution -o jsonpath='{ .spec.host }')/api/stock-items\n`}</code></pre>\n        <p parentName=\"li\">{`The response should be similar to the following output.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`[{\"name\":\"Item 1\",\"id\":\"1\",\"stock\":100,\"price\":10.5,\"manufacturer\":\"Sony\"},{\"name\":\"Item 2\",\"id\":\"2\",\"stock\":150,\"price\":100.0,\"manufacturer\":\"Insignia\"},{\"name\":\"Item 3\",\"id\":\"3\",\"stock\":10,\"price\":1000.0,\"manufacturer\":\"Panasonic\"},{\"name\":\"Item 4\",\"id\":\"4\",\"stock\":9,\"price\":990.0,\"manufacturer\":\"JVC\"}]\n`}</code></pre>\n      </li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Configure the App Connect workflow`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">{`Download and install the `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/SSTTDS_11.0.0/com.ibm.etools.mft.doc/get-started-handson.html\"\n        }}>{`ACE Toolkit`}</a>{` and follow steps 1 and 2.`}</li>\n      <li parentName=\"ol\">{`Fork the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-garage-cloud/inventory-mgmt-ace-solution\"\n        }}>{`inventory-mgmt-ace-solution`}</a>{` repository.  The new repository will be created in your selected organization.`}</li>\n      <li parentName=\"ol\">{`With the browser open to the newly created repository, click on `}<strong parentName=\"li\">{`Clone or download`}</strong>{` and copy the clone `}<em parentName=\"li\">{`SSH link`}</em>{`, and use the `}<inlineCode parentName=\"li\">{`git clone`}</inlineCode>{` command to clone it to your developer desktop machine.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git clone git@github.com:{gitid}/inventory-mgmt-ace-solution.git\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`Change into the cloned directory`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`cd inventory-mgmt-ace-solution/workspace/InventoryManagementSvc\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`Obtain the URL of the Inventory Management SVC route.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`echo $(oc get route inventory-management-svc-solution -o jsonpath='{ .spec.host }')\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`Search and replace the placeholder `}<inlineCode parentName=\"li\">{`INVENTORY_MANAGEMENT_SVC_BASE_URL`}</inlineCode>{` with the Route URL in the `}<em parentName=\"li\">{`listStockItemsUsingGET.subflow`}</em>{` and `}<em parentName=\"li\">{`ace-inventory-management-svc.json`}</em>{` files.`}</li>\n      <li parentName=\"ol\">{`Commit and push the changes into your forked repository.`}</li>\n    </ol>\n    <h3><strong parentName=\"h3\">{`Execute the the App Connect pipeline`}</strong></h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Register the App in a DevOps Pipeline`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`  oc pipeline\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select the `}<strong parentName=\"p\">{`Tekton`}</strong>{` pipeline type.  You should not be prompted for Git credentials as a Secret already exists with your username and token.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When registering a `}<inlineCode parentName=\"p\">{`Tekton`}</inlineCode>{` pipeline, you will also be prompted to select which pipeline you want to use for your application. Select `}<inlineCode parentName=\"p\">{`ibm-ace-bar`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Select `}<em parentName=\"p\">{`Y`}</em>{`/`}<em parentName=\"p\">{`n`}</em>{` to enable the pipeline to scan the image for vulnerabilities.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After the pipeline has been created, the command will set up a webhook from the Git host to the pipeline event listener`}</p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Note:`}</strong>{` If the webhook registration step fails it is likely because the Git credentials are incorrect or do not have enough permission in the repository.`}</p>\n        <p parentName=\"li\">{`The pipeline will be registered in your development cluster.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`View your application pipeline`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc console\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From menu on the left switch to the `}<strong parentName=\"p\">{`Developer`}</strong>{` mode and select `}<em parentName=\"p\">{`dev`}</em>{` project that was used for the application pipeline registration.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the left menu, select `}<em parentName=\"p\">{`Pipelines`}</em>{` and click on the link to the `}<inlineCode parentName=\"p\">{`inventory-mgmt-ace-solution-xxxxxx`}</inlineCode>{` PipelineRun (PLR).`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Validate the App Connect server is working correctly in the terminal.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`curl http://$(oc get route inventory-mgmt-ace-solution-http -o jsonpath='{ .spec.host }')/api/stock-items\n`}</code></pre>\n        <p parentName=\"li\">{`The response should be similar to the following output.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`[{\"name\":\"Item 1\",\"id\":\"1\",\"stock\":100,\"price\":10.5,\"manufacturer\":\"Sony\"},{\"name\":\"Item 2\",\"id\":\"2\",\"stock\":150,\"price\":100.0,\"manufacturer\":\"Insignia\"},{\"name\":\"Item 3\",\"id\":\"3\",\"stock\":10,\"price\":1000.0,\"manufacturer\":\"Panasonic\"},{\"name\":\"Item 4\",\"id\":\"4\",\"stock\":9,\"price\":990.0,\"manufacturer\":\"JVC\"}]\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}