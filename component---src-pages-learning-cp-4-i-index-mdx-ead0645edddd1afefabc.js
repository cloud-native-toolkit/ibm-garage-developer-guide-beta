(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},XbGe:function(e,t,a){"use strict";var n=a("q1tI"),r=a.n(n),i=a("NmYn"),o=a.n(i),l=a("Wbzz"),p=a("Xrax"),b=a("k4MR"),c=a("TSYQ"),s=a.n(c),m=a("QH2O"),d=a.n(m),h=a("qKvR"),u=function(e){var t,a=e.title,n=e.theme,r=e.tabs,i=void 0===r?[]:r;return Object(h.b)("div",{className:s()(d.a.pageHeader,(t={},t[d.a.withTabs]=i.length,t[d.a.darkMode]="dark"===n,t))},Object(h.b)("div",{className:"bx--grid"},Object(h.b)("div",{className:"bx--row"},Object(h.b)("div",{className:"bx--col-lg-12"},Object(h.b)("h1",{id:"page-title",className:d.a.text},a)))))},O=a("BAC9"),j=function(e){var t=e.relativePagePath,a=e.repository,n=Object(l.useStaticQuery)("1364590287").site.siteMetadata.repository,r=a||n,i=r.baseUrl,o=r.subDirectory,p=i+"/edit/"+r.branch+o+"/src/pages"+t;return i?Object(h.b)("div",{className:"bx--row "+O.row},Object(h.b)("div",{className:"bx--col"},Object(h.b)("a",{className:O.link,href:p},"Edit this page on GitHub"))):null},N=a("dI71"),g=a("I8xM"),f=function(e){function t(){return e.apply(this,arguments)||this}return Object(N.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.tabs,a=e.slug,n=a.split("/").filter(Boolean).slice(-1)[0],r=t.map((function(e){var t,r=o()(e,{lower:!0,strict:!0}),i=r===n,p=new RegExp(n+"/?(#.*)?$"),b=a.replace(p,r);return Object(h.b)("li",{key:e,className:s()((t={},t[g.selectedItem]=i,t),g.listItem)},Object(h.b)(l.Link,{className:g.link,to:""+b},e))}));return Object(h.b)("div",{className:g.tabsContainer},Object(h.b)("div",{className:"bx--grid"},Object(h.b)("div",{className:"bx--row"},Object(h.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(h.b)("nav",null,Object(h.b)("ul",{className:g.list},r))))))},t}(r.a.Component),v=a("MjG9"),y=a("CzIb");t.a=function(e){var t=e.pageContext,a=e.children,n=e.location,r=e.Title,i=t.frontmatter,c=void 0===i?{}:i,s=t.relativePagePath,m=t.titleType,d=c.tabs,O=c.title,N=c.theme,g=c.description,w=c.keywords,k=Object(y.a)().interiorTheme,T=Object(l.useStaticQuery)("223705900").site.pathPrefix,x=T?n.pathname.replace(T,""):n.pathname,C=d?x.split("/").filter(Boolean).slice(-1)[0]||o()(d[0],{lower:!0}):"",I=N||k;return Object(h.b)(b.a,{tabs:d,homepage:!1,theme:I,pageTitle:O,pageDescription:g,pageKeywords:w,titleType:m},Object(h.b)(u,{title:r?Object(h.b)(r,null):O,label:"label",tabs:d,theme:I}),d&&Object(h.b)(f,{slug:x,tabs:d,currentTab:C}),Object(h.b)(v.a,{padded:!0},a,Object(h.b)(j,{relativePagePath:s})),Object(h.b)(p.a,null))}},Y5Ho:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return p})),a.d(t,"default",(function(){return u}));var n=a("wx14"),r=a("zLVn"),i=(a("q1tI"),a("7ljp")),o=a("XbGe"),l=a("T0C+"),p=(a("qKvR"),{}),b=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",t)}},c=b("PageDescription"),s=b("Tabs"),m=b("Tab"),d={_frontmatter:p},h=o.a;function u(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)(h,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)(c,{mdxType:"PageDescription"},Object(i.b)("p",null,"Learning tasks for developers to understand the IBM middleware integration use cases on Red Hat OpenShift.")),Object(i.b)("h3",null,"Learning Tasks"),Object(i.b)("p",null,"This set of learning tasks focuses on using IBM middleware on Red Hat OpenShift."),Object(i.b)("h2",null,"Self-paced agenda to build and deploy an App Connect REST API workflow"),Object(i.b)("p",null,"This activity provides a working example of a Tekton based CICD pipeline to build and deploy an App Connect application invoking the REST API of the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/ibm-garage-cloud/inventory-management-svc-solution"},"Inventory Management Service"),".\nThe Pipeline and Task resources available in the ",Object(i.b)("a",{parentName:"p",href:"https://cloudnativetoolkit.dev/"},"Cloud Native Toolkit")," can be used as a starting point to build BAR files for other ACE workflows."),Object(i.b)("p",null,"The activity consists of the following tasks:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Prerequisites"),Object(i.b)("li",{parentName:"ol"},"Deploy the backend ",Object(i.b)("a",{parentName:"li",href:"https://github.com/ibm-garage-cloud/inventory-management-svc-solution"},"Inventory Management Service"),"."),Object(i.b)("li",{parentName:"ol"},"Configure the App Connect workflow with the Inventory REST API URL."),Object(i.b)("li",{parentName:"ol"},"Execute the the App Connect pipeline to build and deploy the configured workflow.")),Object(i.b)("h3",null,Object(i.b)("strong",{parentName:"h3"},"Prerequisites")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Task"),Object(i.b)("th",{parentName:"tr",align:null},"Instructions"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Set up accounts and tools"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"/getting-started/prereqs"},"Instructions"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"Install the Cloud Native Toolkit"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"https://cloudnativetoolkit.dev/getting-started-day-0/install-toolkit/iteration-zero"},"Install the Cloud Native Toolkit"),"  & the following modules",Object(i.b)("br",null),"- ",Object(i.b)("a",{parentName:"td",href:"https://github.com/ibm-garage-cloud/terraform-ibm-cp-catalog"},"Cloud Pak Catalog"),Object(i.b)("br",null),"- ",Object(i.b)("a",{parentName:"td",href:"https://github.com/ibm-garage-cloud/terraform-ibm-cp-platform-navigator"},"IBM Cloud Pak for Integration Platform Navigator"),Object(i.b)("br",null),"- ",Object(i.b)("a",{parentName:"td",href:"https://github.com/ibm-garage-cloud/terraform-ibm-cp-app-connect"},"IBM App Connect"))))),Object(i.b)("h3",null,Object(i.b)("strong",{parentName:"h3"},"Deploy the backend Inventory Management Service")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Open a terminal and log into your OpenShift cluster.  For IBM Cloud, navigate to your cluster in the ",Object(i.b)("em",{parentName:"p"},"IBM Cloud console"),", click on the ",Object(i.b)("strong",{parentName:"p"},"Access")," tab, and follow the\ninstructions to log in to the cluster from the command line.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a development namespace."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"oc sync ${DEV_NAMESPACE} --dev\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Open the Developer Dashboard."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"oc dashboard\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"From the Developer Dashboard, click on ",Object(i.b)("strong",{parentName:"p"},Object(i.b)(l.a,{name:"templates",mdxType:"Globals"}))," tab.  Click on the ",Object(i.b)("strong",{parentName:"p"},"Inventory Service")," tile to create your app github repository from the\ntemplate repository selected. You can also click on the ",Object(i.b)("strong",{parentName:"p"},"Git Icon")," to browse the source template repository and click on the ",Object(i.b)("strong",{parentName:"p"},"Template")," to create the template.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Complete the ",Object(i.b)("a",{parentName:"p",href:"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-from-a-template"},"GitHub create repository from template")," process."),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Owner"),": Select a validate GitHub organization that you are authorized to create repositories within or the one you were given for the shared cluster (See warning above)"),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Repository name"),": Enter a valid name for you repo, GitHub will help with showing a green tick if it is valid (See warning above)"),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Description"),": Describe your app"),Object(i.b)("p",{parentName:"li"},"Press ",Object(i.b)("strong",{parentName:"p"},"Create repository from template")," and the new repository will be created in your selected organization.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"With the browser open to the newly created repository, click on ",Object(i.b)("strong",{parentName:"p"},"Clone or download")," and copy the clone ",Object(i.b)("em",{parentName:"p"},"SSH link"),", and use the ",Object(i.b)("inlineCode",{parentName:"p"},"git clone")," command to clone it to your developer desktop machine."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"git clone git@github.com:{gitid}/inventory-management-svc-solution.git\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Change into the cloned directory."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"cd inventory-management-svc-solution\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Set a basepath for the REST API for the Inventory Management Service."),Object(i.b)(s,{mdxType:"Tabs"},Object(i.b)(m,{label:"OpenShift 4.0 - 4.5",mdxType:"Tab"},Object(i.b)("br",null),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Edit ",Object(i.b)("strong",{parentName:"p"},"src/main/resources/application.yml")," and update the ",Object(i.b)("em",{parentName:"p"},"server")," section to include the ",Object(i.b)("inlineCode",{parentName:"p"},"/api")," base path to ",Object(i.b)("em",{parentName:"p"},"server.servlet.context-path"),"."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'server:\n  port: ${PORT:9080}\n  servlet:\n    context-path: "/api"\n')))),Object(i.b)("br",null),Object(i.b)("ol",{parentName:"li",start:2},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Edit the file ",Object(i.b)("strong",{parentName:"p"},"chart/base/values.yaml")," and set the ",Object(i.b)("em",{parentName:"p"},"route.path")," from ",Object(i.b)("inlineCode",{parentName:"p"},"/")," to ",Object(i.b)("inlineCode",{parentName:"p"},"/api"),"."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'route:\n  enabled: false\n  rewriteTarget: "/"\n  path: "/api"\n'))))),Object(i.b)(m,{label:"OpenShift 4.6+",mdxType:"Tab"},Object(i.b)("br",null),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Edit the file ",Object(i.b)("strong",{parentName:"p"},"chart/base/values.yaml")," and set the ",Object(i.b)("em",{parentName:"p"},"route.path")," from ",Object(i.b)("inlineCode",{parentName:"p"},"/")," to ",Object(i.b)("inlineCode",{parentName:"p"},"/api"),"."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'route:\n  enabled: false\n  rewriteTarget: "/"\n  path: "/api"\n'))))))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Set the namespace context."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"oc project {DEV_NAMESPACE}\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Register the App in a DevOps Pipeline"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"  oc pipeline\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Select the ",Object(i.b)("strong",{parentName:"p"},"Tekton")," pipeline type.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The first time a pipeline is registered in the namespace, the CLI will ask for your username and\n",Object(i.b)("strong",{parentName:"p"},"Personal Access Token")," for the Git repository.  The credentials will be stored in a secret named ",Object(i.b)("inlineCode",{parentName:"p"},"git-credentials"),". It will use the current branch."),Object(i.b)("p",{parentName:"li"},"  ",Object(i.b)("strong",{parentName:"p"},"Username"),": Enter your GitHub user id"),Object(i.b)("p",{parentName:"li"},"  ",Object(i.b)("strong",{parentName:"p"},"Personal Access Token"),": Paste your GitHub personal access token")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"When registering a ",Object(i.b)("inlineCode",{parentName:"p"},"Tekton")," pipeline, you will also be prompted to select which pipeline you want to use for your application. Select ",Object(i.b)("inlineCode",{parentName:"p"},"ibm-java-gradle"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Select ",Object(i.b)("em",{parentName:"p"},"Y"),"/",Object(i.b)("em",{parentName:"p"},"n")," to enable the pipeline to scan the image for vulnerabilities.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Provide ",Object(i.b)("em",{parentName:"p"},"/api")," as the base path.  This is needed by the pipeline when running the ",Object(i.b)("em",{parentName:"p"},"health")," Task.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"After the pipeline has been created, the command will set up a webhook from the Git host to the pipeline event listener."),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Note:")," If the webhook registration step fails it is likely because the Git credentials are incorrect or do not have enough permission in the repository."),Object(i.b)("p",{parentName:"li"},"The pipeline will be registered in your development cluster and a pipelinerun will be started.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"View your application pipeline."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"oc console\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"From menu on the left switch to the ",Object(i.b)("strong",{parentName:"p"},"Developer")," mode and select the ",Object(i.b)("em",{parentName:"p"},"dev")," project that was used for the application pipeline registration.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"In the left menu, select ",Object(i.b)("em",{parentName:"p"},"Pipelines")," and click on the link to the ",Object(i.b)("inlineCode",{parentName:"p"},"inventory-management-svc-solution-xxxxxx")," PipelineRun (PLR).")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Validate the REST API of the Inventory Management service is working correctly in the terminal."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"curl https://$(oc get route inventory-management-svc-solution -o jsonpath='{ .spec.host }')/api/stock-items\n")),Object(i.b)("p",{parentName:"li"},"The response should be similar to the following output."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},'[{"name":"Item 1","id":"1","stock":100,"price":10.5,"manufacturer":"Sony"},{"name":"Item 2","id":"2","stock":150,"price":100.0,"manufacturer":"Insignia"},{"name":"Item 3","id":"3","stock":10,"price":1000.0,"manufacturer":"Panasonic"},{"name":"Item 4","id":"4","stock":9,"price":990.0,"manufacturer":"JVC"}]\n')))),Object(i.b)("h3",null,Object(i.b)("strong",{parentName:"h3"},"Configure the App Connect workflow")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Download and install the ",Object(i.b)("a",{parentName:"li",href:"https://www.ibm.com/support/knowledgecenter/SSTTDS_11.0.0/com.ibm.etools.mft.doc/get-started-handson.html"},"ACE Toolkit")," and follow steps 1 and 2."),Object(i.b)("li",{parentName:"ol"},"Fork the ",Object(i.b)("a",{parentName:"li",href:"https://github.com/ibm-garage-cloud/inventory-mgmt-ace-solution"},"inventory-mgmt-ace-solution")," repository.  The new repository will be created in your selected organization."),Object(i.b)("li",{parentName:"ol"},"With the browser open to the newly created repository, click on ",Object(i.b)("strong",{parentName:"li"},"Clone or download")," and copy the clone ",Object(i.b)("em",{parentName:"li"},"SSH link"),", and use the ",Object(i.b)("inlineCode",{parentName:"li"},"git clone")," command to clone it to your developer desktop machine.",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"git clone git@github.com:{gitid}/inventory-mgmt-ace-solution.git\n"))),Object(i.b)("li",{parentName:"ol"},"Change into the cloned directory",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"cd inventory-mgmt-ace-solution/workspace/InventoryManagementSvc\n"))),Object(i.b)("li",{parentName:"ol"},"Obtain the URL of the Inventory Management SVC route.",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"echo $(oc get route inventory-management-svc-solution -o jsonpath='{ .spec.host }')\n"))),Object(i.b)("li",{parentName:"ol"},"Search and replace the placeholder ",Object(i.b)("inlineCode",{parentName:"li"},"INVENTORY_MANAGEMENT_SVC_BASE_URL")," with the Route URL in the ",Object(i.b)("em",{parentName:"li"},"listStockItemsUsingGET.subflow")," and ",Object(i.b)("em",{parentName:"li"},"ace-inventory-management-svc.json")," files."),Object(i.b)("li",{parentName:"ol"},"Commit and push the changes into your forked repository.")),Object(i.b)("h3",null,Object(i.b)("strong",{parentName:"h3"},"Execute the the App Connect pipeline")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Register the App in a DevOps Pipeline"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"  oc pipeline\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Select the ",Object(i.b)("strong",{parentName:"p"},"Tekton")," pipeline type.  You should not be prompted for Git credentials as a Secret already exists with your username and token.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"When registering a ",Object(i.b)("inlineCode",{parentName:"p"},"Tekton")," pipeline, you will also be prompted to select which pipeline you want to use for your application. Select ",Object(i.b)("inlineCode",{parentName:"p"},"ibm-ace-bar"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Select ",Object(i.b)("em",{parentName:"p"},"Y"),"/",Object(i.b)("em",{parentName:"p"},"n")," to enable the pipeline to scan the image for vulnerabilities.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"After the pipeline has been created, the command will set up a webhook from the Git host to the pipeline event listener"),Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"Note:")," If the webhook registration step fails it is likely because the Git credentials are incorrect or do not have enough permission in the repository."),Object(i.b)("p",{parentName:"li"},"The pipeline will be registered in your development cluster.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"View your application pipeline"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"oc console\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"From menu on the left switch to the ",Object(i.b)("strong",{parentName:"p"},"Developer")," mode and select ",Object(i.b)("em",{parentName:"p"},"dev")," project that was used for the application pipeline registration.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"In the left menu, select ",Object(i.b)("em",{parentName:"p"},"Pipelines")," and click on the link to the ",Object(i.b)("inlineCode",{parentName:"p"},"inventory-mgmt-ace-solution-xxxxxx")," PipelineRun (PLR).")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Validate the App Connect server is working correctly in the terminal."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"curl http://$(oc get route inventory-mgmt-ace-solution-http -o jsonpath='{ .spec.host }')/api/stock-items\n")),Object(i.b)("p",{parentName:"li"},"The response should be similar to the following output."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},'[{"name":"Item 1","id":"1","stock":100,"price":10.5,"manufacturer":"Sony"},{"name":"Item 2","id":"2","stock":150,"price":100.0,"manufacturer":"Insignia"},{"name":"Item 3","id":"3","stock":10,"price":1000.0,"manufacturer":"Panasonic"},{"name":"Item 4","id":"4","stock":9,"price":990.0,"manufacturer":"JVC"}]\n')))))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-learning-cp-4-i-index-mdx-ead0645edddd1afefabc.js.map