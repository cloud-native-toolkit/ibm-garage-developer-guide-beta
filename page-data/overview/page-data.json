{"componentChunkName":"component---src-pages-overview-index-mdx","path":"/overview/","result":{"pageContext":{"frontmatter":{"title":"Overview"},"relativePagePath":"/overview/index.mdx","titleType":"page","MdxNode":{"id":"b6f40305-d7fe-580f-a44f-c1767bc3108a","children":[],"parent":"aed040a9-493e-598d-853d-f62bc043a449","internal":{"content":"---\ntitle: Overview\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals'\nimport Carousel from 'gatsby-theme-carbon/src/templates/Carousel'\n\n<PageDescription>\n\nGet familiar with using the <Globals name=\"longName\"/>\n\n</PageDescription>\n\n<Globals name=\"longName\" /> provides an environment for developing cloud-native applications for deployment\nwithin <Globals name=\"kube\" /> and <Globals name=\"ocp\" />. It\nembodies <Globals name=\"method\" /> principles and practices for consistently developed\napplications, incorporating best practices that increase developer velocity for efficient delivery of business value.\n\n<Carousel images={[\"/images/cntk-objectives.png\", \"/images/cntk-philosophy.png\"]} />\n\n## Components of the <Globals name=\"longName\" />\n\nAs the name suggests, the <Globals name=\"longName\" /> provides a collection of tools that can be used in part or in\nwhole to support the activities of software development life-cycle. The following provides a listing of the \"tools\" that\nmake up the <Globals name=\"shortName\" />:\n\n![<Globals name=\"shortName\" />](./images/cntk-in-the-toolkit.png)\n\n- [**CNTK Guides**](#guides) - this set of documentation that weaves the various toolkit components together with a perspective on how to apply cloud-native practices to deliver business solutions\n- [**Infrastucture as Code**](getting-started-day-0/infrastructure-as-code) - Terraform scripts and GitOps configuration to provision and manage the environment\n- [**CLI**](/getting-started/cli) - a simple node-based CLI that installs as a plugin to the `kubectl` and `oc` CLIs and provides commands to simplify common\n- [**Developer Dashboard**](/getting-started-day-1/dashboard) - Dashboard component and <Globals name=\"ocp\" /> console extensions to simplify common developer activities\n- [**DevOps pipelines**](/getting-started-day-1/continuous-integration) - continuous integration pipelines for Tekton and Jenkins\n- [**Starter Kits and Code Patterns**](./starterkits) - software repositories that can be used to quickly get started building applications using common patterns, or to serve as a reference to enhance existing patterns\n- [**Learning Journey**](/activation) - activation material to teach practitioners how to apply cloud-native practices in real-world scenarios using the <Globals name=\"tinyName\" />\n\n## <Globals name=\"shortName\" /> <Globals name=\"devenv\" />\n\nThe <Globals name=\"shortName\" /> <Globals name=\"devenv\" /> includes several features that support\n<Globals name=\"method\" /> best practices for consistent and rapid development of cloud-native applications:\n\n- **Cluster**: A <Globals name=\"kube\" /> or <Globals name=\"ocp\" /> cluster that both hosts the tools and itself is a deployment target for application builds\n- **SDLC**: Deployment target environments that support the application development lifecycle: *dev*, *test*, and *staging*\n- **Backend services**: Cloud services commonly required by cloud-native applications for monitoring, security, and persistence\n- **CI/CD**: A prebuilt, ready-to-run continuous delivery pipeline incorporating best-of-breed open source software tools\n- **<Globals name=\"templates\" />**: Prebuilt code templates for common application components and tasks incorporating best practices that developers can add to their codebase as needed\n- **Dashboard**: A centralized console to help developers use the environment's capabilities\n\nTypically a [Cloud System Admin](/admin/overview) or a\n[squad lead](https://www.ibm.com/garage/method/practices/culture/practice-building-effective-squads/)) installs and sets\nup a new <Globals name=\"devenv\" /> after the [initial inception workshop](https://www.ibm.com/garage/method/practices/think/inception),\nproviding a place for the developers to start developing the\n[minimum viable product (MVP)](https://www.ibm.com/garage/method/practices/think/inception/practice_minimum_viable_product).\nThe objective is to reduce the time required for a team to configure and prepare their development environment. The key\nbenefit is to make the end-to-end [CI/CD development lifecycle](https://www.ibm.com/garage/method/practices/deliver/practice_continuous_delivery/)\nconsistent across each platform and make the out-of-the-box developer experience as simple as possible.\n\nThe installation is performed using [Terraform](https://cloud.ibm.com/docs/terraform), driven by scripts with\na [modular configuration](https://github.com/ibm-garage-cloud/garage-terraform-modules)\nso unneeded tools can be easily disabled or new tools added. The combination of tools selected are proven in the\nindustry to deliver real value for modern cloud-native development.\n\n[Red Hat Open Innovation Labs CI/CD components](https://github.com/rht-labs/labs-ci-cd) embodies a very similar approach\nto how they deliver success with OpenShift.\n\n### Environment components\n\nAfter installation, the <Globals name=\"env\" /> consists of the following components and developer tools:\n- A development cluster\n- A set of backend services\n- A set of continuous delivery tools\n\nThis diagram illustrates the <Globals name=\"env\" />:\n\n![Provisioned environment](../images/catalyst-provisioned-environment.png)\n\nThe diagram shows the components in the environment: the cluster, the deployment target environments, the cloud services, and the tools.\n\n<Accordion>\n  <AccordionItem title=\"Logo Usage Reference\">\n\n| Logo      | Usage Reference |\n| --------- | ---------- |\n| Artifactory | is an Open Source product maintained by [JFrog](https://jfrog.com/brand-guidelines/) |\n| Jenkins | Open Source project [Jenkins](https://www.jenkins.io/artwork/) |\n| SonarQube | Open Source project maintained by [SonarSource](https://www.sonarsource.com/logos/) |\n| Nexus Repository | Open Source project maintained by [SonaType](https://www.sonatype.com/nexus-repository-oss) |\n| Trivy | Open Source project maintained by [Aqua](https://www.aquasec.com/brand/) |\n| InteliJ | IDE from [JetBrains](https://www.jetbrains.com/company/brand/) |\n| VSCode | Free IDE maintained by [Microsoft](https://code.visualstudio.com/) |\n| Jaeger | Open Source tool maintained by [Jaeger Community](https://www.jaegertracing.io/get-in-touch/) |\n| ArgoCD | Open Source tool maintained by [ArgoCD Community](https://argoproj.github.io/projects/argo-cd/)|\n| OpenShift and CodeReady | Workspaces are products from [Red Hat](https://developers.redhat.com/products/codeready-workspaces/overview) |\n| LogDNA | IBM Cloud service supplied by [LogDNA](https://logdna.com/)|\n| Sysdig | IBM Cloud service supplied by [Sysdig](https://sysdig.com/)|\n\n</AccordionItem>\n</Accordion>\n\n#### Development cluster\n\nThe heart of the <Globals key=\"env\" /> is a cluster:\n\n- An [<Globals key=\"iks\" />](https://www.ibm.com/cloud/container-service)\nor [<Globals key=\"roks\" />](https://www.ibm.com/cloud/openshift) 3-node cluster\n- Cluster namespace that encapsulates the tooling installed in the cluster: *tools*\n- Cluster namespaces for deployment target environments: *dev*, *test*, and *staging*\n\n#### Backend services\n\nThe following <Globals key=\"ic\" /> services are created and bound to the cluster:\n\n| Capability                | Service        |Description |\n| -----------------------   |:-------------- |------------|\n| Log Management            | [Log Analysis with LogDNA](/guides/log-management)  | Manage and analyze app logs  |\n| Monitoring                | [Cloud Monitoring with Sysdig](/guides/monitoring)  | Monitor app and platform resources |\n| User Authentication       | [App ID](/programming/security/)                    | Verify identities of clients accessing app end points |\n| Relational Data Storage   | [Databases For PostgreSQL](/programming/databases) (used by SonarQube) | Stores relational data structured as schemas for SQL querying |\n| Schemaless Data Storage   | [Cloudant](/programming/databases)                  | NoSQL database for JSON documents |\n| Binary Data Storage       | [Cloud Object Storage](/programming/databases)      | Storage service commonly used for binary content |\n\n#### Continuous delivery tools\n\nThe following best-of-breed open source software tools are installed in the cluster's *tools* namespace:\n\n| Capability                  | Tool           | Bitnami |Description |\n| --------------------------- |:-------------- | ------- |------------|\n| Continuous Integration      | [Jenkins CI](/guides/continuous-integration/)            |  Yes    | Jenkins is a common tool for Continuous Integration   |\n| Continuous Integration      | [Tekton CI](/guides/continuous-integration-tekton)       |         | Tekton is an emerging tool for Continuous Integration with Kubernetes and OpenShift  |\n| API Contract Testing        | [Pact](/guides/contract-testing/)                        |         | Pact enables API contract testing |\n| Code Analysis               | [SonarQube](/guides/code-analysis)                       |  Yes    | SonarQube can scan code and display the results in a dashboard |\n| Container Image Registry    | [IBM Cloud Container Registry](/guides/image-registry)   |         | Stores container images to be deployed |\n| Artifact Management         | [Artifactory](/guides/artifact-management/)              |  Yes    | Artifactory is an artifact storage and Helm chart repository  |\n| Continuous Delivery         | [ArgoCD](/guides/continuous-delivery/)                   |         | ArgoCD support Continuous Delivery with GitOps |\n| Web IDE                     | [Code Ready Workspace](https://developers.redhat.com/products/codeready-workspaces/overview)              |         | IDE for editing and managing code in a web browser |\n\n## Getting Started\n\nGet to know the <Globals name=\"shortName\" />:\n\n<AnchorLinks small>\n      <AnchorLink to=\"../getting-started/overview\">Getting Started</AnchorLink>\n      <AnchorLink to=\"../getting-started/deploy-app\">Deploy Your First App</AnchorLink>\n      <AnchorLink to=\"../guides/overview\">Tools Guides</AnchorLink>\n      <AnchorLink to=\"../starterkits\"><Globals name=\"templates\" /></AnchorLink>\n      <AnchorLink to=\"../admin/overview\">Installation</AnchorLink>\n      <AnchorLink to=\"../arch/environment\">Architectures</AnchorLink>\n</AnchorLinks>\n","type":"Mdx","contentDigest":"3e9ac1c89dad37a53e2d176fdb3df7e1","counter":894,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Overview"},"exports":{},"rawBody":"---\ntitle: Overview\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals'\nimport Carousel from 'gatsby-theme-carbon/src/templates/Carousel'\n\n<PageDescription>\n\nGet familiar with using the <Globals name=\"longName\"/>\n\n</PageDescription>\n\n<Globals name=\"longName\" /> provides an environment for developing cloud-native applications for deployment\nwithin <Globals name=\"kube\" /> and <Globals name=\"ocp\" />. It\nembodies <Globals name=\"method\" /> principles and practices for consistently developed\napplications, incorporating best practices that increase developer velocity for efficient delivery of business value.\n\n<Carousel images={[\"/images/cntk-objectives.png\", \"/images/cntk-philosophy.png\"]} />\n\n## Components of the <Globals name=\"longName\" />\n\nAs the name suggests, the <Globals name=\"longName\" /> provides a collection of tools that can be used in part or in\nwhole to support the activities of software development life-cycle. The following provides a listing of the \"tools\" that\nmake up the <Globals name=\"shortName\" />:\n\n![<Globals name=\"shortName\" />](./images/cntk-in-the-toolkit.png)\n\n- [**CNTK Guides**](#guides) - this set of documentation that weaves the various toolkit components together with a perspective on how to apply cloud-native practices to deliver business solutions\n- [**Infrastucture as Code**](getting-started-day-0/infrastructure-as-code) - Terraform scripts and GitOps configuration to provision and manage the environment\n- [**CLI**](/getting-started/cli) - a simple node-based CLI that installs as a plugin to the `kubectl` and `oc` CLIs and provides commands to simplify common\n- [**Developer Dashboard**](/getting-started-day-1/dashboard) - Dashboard component and <Globals name=\"ocp\" /> console extensions to simplify common developer activities\n- [**DevOps pipelines**](/getting-started-day-1/continuous-integration) - continuous integration pipelines for Tekton and Jenkins\n- [**Starter Kits and Code Patterns**](./starterkits) - software repositories that can be used to quickly get started building applications using common patterns, or to serve as a reference to enhance existing patterns\n- [**Learning Journey**](/activation) - activation material to teach practitioners how to apply cloud-native practices in real-world scenarios using the <Globals name=\"tinyName\" />\n\n## <Globals name=\"shortName\" /> <Globals name=\"devenv\" />\n\nThe <Globals name=\"shortName\" /> <Globals name=\"devenv\" /> includes several features that support\n<Globals name=\"method\" /> best practices for consistent and rapid development of cloud-native applications:\n\n- **Cluster**: A <Globals name=\"kube\" /> or <Globals name=\"ocp\" /> cluster that both hosts the tools and itself is a deployment target for application builds\n- **SDLC**: Deployment target environments that support the application development lifecycle: *dev*, *test*, and *staging*\n- **Backend services**: Cloud services commonly required by cloud-native applications for monitoring, security, and persistence\n- **CI/CD**: A prebuilt, ready-to-run continuous delivery pipeline incorporating best-of-breed open source software tools\n- **<Globals name=\"templates\" />**: Prebuilt code templates for common application components and tasks incorporating best practices that developers can add to their codebase as needed\n- **Dashboard**: A centralized console to help developers use the environment's capabilities\n\nTypically a [Cloud System Admin](/admin/overview) or a\n[squad lead](https://www.ibm.com/garage/method/practices/culture/practice-building-effective-squads/)) installs and sets\nup a new <Globals name=\"devenv\" /> after the [initial inception workshop](https://www.ibm.com/garage/method/practices/think/inception),\nproviding a place for the developers to start developing the\n[minimum viable product (MVP)](https://www.ibm.com/garage/method/practices/think/inception/practice_minimum_viable_product).\nThe objective is to reduce the time required for a team to configure and prepare their development environment. The key\nbenefit is to make the end-to-end [CI/CD development lifecycle](https://www.ibm.com/garage/method/practices/deliver/practice_continuous_delivery/)\nconsistent across each platform and make the out-of-the-box developer experience as simple as possible.\n\nThe installation is performed using [Terraform](https://cloud.ibm.com/docs/terraform), driven by scripts with\na [modular configuration](https://github.com/ibm-garage-cloud/garage-terraform-modules)\nso unneeded tools can be easily disabled or new tools added. The combination of tools selected are proven in the\nindustry to deliver real value for modern cloud-native development.\n\n[Red Hat Open Innovation Labs CI/CD components](https://github.com/rht-labs/labs-ci-cd) embodies a very similar approach\nto how they deliver success with OpenShift.\n\n### Environment components\n\nAfter installation, the <Globals name=\"env\" /> consists of the following components and developer tools:\n- A development cluster\n- A set of backend services\n- A set of continuous delivery tools\n\nThis diagram illustrates the <Globals name=\"env\" />:\n\n![Provisioned environment](../images/catalyst-provisioned-environment.png)\n\nThe diagram shows the components in the environment: the cluster, the deployment target environments, the cloud services, and the tools.\n\n<Accordion>\n  <AccordionItem title=\"Logo Usage Reference\">\n\n| Logo      | Usage Reference |\n| --------- | ---------- |\n| Artifactory | is an Open Source product maintained by [JFrog](https://jfrog.com/brand-guidelines/) |\n| Jenkins | Open Source project [Jenkins](https://www.jenkins.io/artwork/) |\n| SonarQube | Open Source project maintained by [SonarSource](https://www.sonarsource.com/logos/) |\n| Nexus Repository | Open Source project maintained by [SonaType](https://www.sonatype.com/nexus-repository-oss) |\n| Trivy | Open Source project maintained by [Aqua](https://www.aquasec.com/brand/) |\n| InteliJ | IDE from [JetBrains](https://www.jetbrains.com/company/brand/) |\n| VSCode | Free IDE maintained by [Microsoft](https://code.visualstudio.com/) |\n| Jaeger | Open Source tool maintained by [Jaeger Community](https://www.jaegertracing.io/get-in-touch/) |\n| ArgoCD | Open Source tool maintained by [ArgoCD Community](https://argoproj.github.io/projects/argo-cd/)|\n| OpenShift and CodeReady | Workspaces are products from [Red Hat](https://developers.redhat.com/products/codeready-workspaces/overview) |\n| LogDNA | IBM Cloud service supplied by [LogDNA](https://logdna.com/)|\n| Sysdig | IBM Cloud service supplied by [Sysdig](https://sysdig.com/)|\n\n</AccordionItem>\n</Accordion>\n\n#### Development cluster\n\nThe heart of the <Globals key=\"env\" /> is a cluster:\n\n- An [<Globals key=\"iks\" />](https://www.ibm.com/cloud/container-service)\nor [<Globals key=\"roks\" />](https://www.ibm.com/cloud/openshift) 3-node cluster\n- Cluster namespace that encapsulates the tooling installed in the cluster: *tools*\n- Cluster namespaces for deployment target environments: *dev*, *test*, and *staging*\n\n#### Backend services\n\nThe following <Globals key=\"ic\" /> services are created and bound to the cluster:\n\n| Capability                | Service        |Description |\n| -----------------------   |:-------------- |------------|\n| Log Management            | [Log Analysis with LogDNA](/guides/log-management)  | Manage and analyze app logs  |\n| Monitoring                | [Cloud Monitoring with Sysdig](/guides/monitoring)  | Monitor app and platform resources |\n| User Authentication       | [App ID](/programming/security/)                    | Verify identities of clients accessing app end points |\n| Relational Data Storage   | [Databases For PostgreSQL](/programming/databases) (used by SonarQube) | Stores relational data structured as schemas for SQL querying |\n| Schemaless Data Storage   | [Cloudant](/programming/databases)                  | NoSQL database for JSON documents |\n| Binary Data Storage       | [Cloud Object Storage](/programming/databases)      | Storage service commonly used for binary content |\n\n#### Continuous delivery tools\n\nThe following best-of-breed open source software tools are installed in the cluster's *tools* namespace:\n\n| Capability                  | Tool           | Bitnami |Description |\n| --------------------------- |:-------------- | ------- |------------|\n| Continuous Integration      | [Jenkins CI](/guides/continuous-integration/)            |  Yes    | Jenkins is a common tool for Continuous Integration   |\n| Continuous Integration      | [Tekton CI](/guides/continuous-integration-tekton)       |         | Tekton is an emerging tool for Continuous Integration with Kubernetes and OpenShift  |\n| API Contract Testing        | [Pact](/guides/contract-testing/)                        |         | Pact enables API contract testing |\n| Code Analysis               | [SonarQube](/guides/code-analysis)                       |  Yes    | SonarQube can scan code and display the results in a dashboard |\n| Container Image Registry    | [IBM Cloud Container Registry](/guides/image-registry)   |         | Stores container images to be deployed |\n| Artifact Management         | [Artifactory](/guides/artifact-management/)              |  Yes    | Artifactory is an artifact storage and Helm chart repository  |\n| Continuous Delivery         | [ArgoCD](/guides/continuous-delivery/)                   |         | ArgoCD support Continuous Delivery with GitOps |\n| Web IDE                     | [Code Ready Workspace](https://developers.redhat.com/products/codeready-workspaces/overview)              |         | IDE for editing and managing code in a web browser |\n\n## Getting Started\n\nGet to know the <Globals name=\"shortName\" />:\n\n<AnchorLinks small>\n      <AnchorLink to=\"../getting-started/overview\">Getting Started</AnchorLink>\n      <AnchorLink to=\"../getting-started/deploy-app\">Deploy Your First App</AnchorLink>\n      <AnchorLink to=\"../guides/overview\">Tools Guides</AnchorLink>\n      <AnchorLink to=\"../starterkits\"><Globals name=\"templates\" /></AnchorLink>\n      <AnchorLink to=\"../admin/overview\">Installation</AnchorLink>\n      <AnchorLink to=\"../arch/environment\">Architectures</AnchorLink>\n</AnchorLinks>\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/overview/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","63531786","63531786","768070550"]}